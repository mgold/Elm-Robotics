{
  "author": {
    "name": "Paul Miller",
    "url": "http://paulmillr.com"
  },
  "name": "es6-shim",
  "version": "0.10.1",
  "description": "ECMAScript 6 (Harmony) compatibility shims for legacy JavaScript engines",
  "keywords": [
    "ecmascript",
    "harmony",
    "es6",
    "shim",
    "promise",
    "promises",
    "setPrototypeOf",
    "map",
    "set",
    "__proto__"
  ],
  "homepage": "https://github.com/paulmillr/es6-shim/",
  "repository": {
    "type": "git",
    "url": "git://github.com/paulmillr/es6-shim.git"
  },
  "main": "es6-shim",
  "scripts": {
    "test": "jshint es6-shim.js && mocha test/*.js test/*/*.js"
  },
  "testling": {
    "html": "testling.html",
    "browsers": [
      "iexplore/9.0..latest",
      "firefox/10.0",
      "firefox/17.0",
      "firefox/22.0..latest",
      "firefox/nightly",
      "chrome/25.0..latest",
      "chrome/canary",
      "safari/5.0.5..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "opera/12.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "dependencies": {},
  "devDependencies": {
    "mocha": "~1.17.1",
    "chai": "~1.9.0",
    "es5-shim": "~2.3.0",
    "jshint": "~2.4.3",
    "promises-aplus-tests": "~2.0.3"
  },
  "readme": "# ES6 Shim\nProvides compatibility shims so that legacy JavaScript engines behave as\nclosely as possible to ECMAScript 6 (Harmony).\n\n[![Build Status][1]][2] [![dependency status][3]][4] [![dev dependency status][5]][6]\n\n[![browser support](https://ci.testling.com/paulmillr/es6-shim.png)](https://ci.testling.com/paulmillr/es6-shim)\n\n## Installation\nIf you want to use it in browser:\n\n* Just include es6-shim before your scripts.\n* Include [es5-shim](https://github.com/kriskowal/es5-shim) if your browser doesn't support ECMAScript 5.\n* `component install paulmillr/es6-shim` if you’re using [component(1)](https://github.com/component/component).\n* `bower install es6-shim` if you’re using [Twitter Bower](http://bower.io/).\n\nFor node.js:\n\n    npm install es6-shim\n\nIn both browser and node you may also want to include `unorm`; see the\n[`String.prototype.normalize`](#stringprototypenormalize) section for\ndetails.\n\n## Safe shims\n\n* `Map`, `Set` (requires ES5)\n* `Promise`\n* `String`:\n    * `fromCodePoint()` ([a standalone shim is also available](http://mths.be/fromcodepoint))\n    * `raw()`\n* `String.prototype`:\n    * `codePointAt()` ([a standalone shim is also available](http://mths.be/codepointat))\n    * `repeat()` ([a standalone shim is also available](http://mths.be/repeat))\n    * `startsWith()` ([a standalone shim is also available](http://mths.be/startswith))\n    * `endsWith()` ([a standalone shim is also available](http://mths.be/endswith))\n    * `contains()` ([a standalone shim is also available](http://mths.be/contains))\n* `Number`:\n    * `MAX_SAFE_INTEGER`\n    * `MIN_SAFE_INTEGER`\n    * `EPSILON`\n    * `parseInt()`\n    * `parseFloat()`\n    * `isNaN()`([a standalone shim is also available](https://npmjs.org/package/is-nan))\n    * `isInteger()`\n    * `isSafeInteger()`\n    * `isFinite()`\n* `Array`:\n    * `from()`\n    * `of()`\n* `Array.prototype`:\n    * `copyWithin()`\n    * `fill()`\n    * `find()` ([a standalone shim is also available](https://github.com/paulmillr/Array.prototype.find))\n    * `findIndex()` ([a standalone shim is also available](https://github.com/paulmillr/Array.prototype.findIndex))\n    * `keys()` (note: keys/values/entries return an `ArrayIterator` object)\n    * `entries()`\n    * `values()`\n* `Object`:\n    * `getOwnPropertyDescriptors()` (ES5)\n    * `getPropertyDescriptor()` (ES5)\n    * `getPropertyNames()` (ES5)\n    * `getPropertyKeys()` (ES5)\n    * `keys()` (ES5)\n    * `is()` ([a standalone shim is also available](https://github.com/ljharb/object-is))\n    * `assign()`\n    * `setPrototypeOf()` (IE >= 11)\n* `Math`:\n    * `acosh()`\n    * `asinh()`\n    * `atanh()`\n    * `cbrt()`\n    * `clz32()`\n    * `cosh()`\n    * `expm1()`\n    * `hypot()`\n    * `log2()`\n    * `log10()`\n    * `log1p()`\n    * `sign()`\n    * `sinh()`\n    * `tanh()`\n    * `trunc()`\n    * `imul()`\n    * `fround()`\n\nMath functions accuracy is 1e-11.\n\n## Subclassing\nThe `Map`, `Set`, and `Promise` implementations are subclassable.\nYou should use the following pattern to create a subclass in ES5 which\nwill continue to work in ES6:\n```javascript\nfunction MyPromise(exec) {\n  Promise.call(this, exec);\n  // ...\n}\nObject.setPrototypeOf(MyPromise, Promise);\nMyPromise.prototype = Object.create(Promise.prototype, {\n  constructor: { value: MyPromise }\n});\n```\n\n## String.prototype.normalize\nIncluding a proper shim for `String.prototype.normalize` would\nincrease the size of this library by a factor of more than 4.\nSo instead we recommend that you install the\n[`unorm`](https://github.com/walling/unorm)\npackage alongside `es6-shim` if you need `String.prototype.normalize`.\nSee https://github.com/paulmillr/es6-shim/issues/134 for more\ndiscussion.\n\n\n## WeakMap shim\nIt is not possible to implement WeakMap in pure javascript.\nThe [es6-collections](https://github.com/WebReflection/es6-collections)\nimplementation doesn't hold values strongly, which is critical\nfor the collection. es6-shim decided to not include an incorrect shim.\n\nWeakMap has a very unusual use-case so you probably won't need it at all\n(use simple `Map` instead).\n\n## Getting started\n\n```javascript\n'abc'.startsWith('a') // true\n'abc'.endsWith('a') // false\n'john alice'.contains('john') // true\n'123'.repeat(2)     // '123123'\n\nObject.is(NaN, NaN) // Fixes ===. 0 isnt -0, NaN is NaN\nObject.assign({a: 1}, {b: 2}) // {a: 1, b: 2}\n\nNumber.isNaN('123') // false. isNaN('123') will give true.\nNumber.isFinite('asd') // false. Global isFinite() will give true.\n// Tests if value is a number, finite,\n// >= -9007199254740992 && <= 9007199254740992 and floor(value) === value\nNumber.isInteger(2.4) // false.\n\nMath.sign(400) // 1, 0 or -1 depending on sign. In this case 1.\n\n[5, 10, 15, 10].find(function(item) {return item / 2 === 5;}) // 10\n[5, 10, 15, 10].findIndex(function(item) {return item / 2 === 5;}) // 1\n\n// Replacement for `{}` key-value storage.\n// Keys can be anything.\nvar map = new Map()\nmap.set('John', 25)\nmap.set('Alice', 400)\nmap.set(['meh'], 555)\nmap.get(['meh']) // undefined because you need to use exactly the same object.\nmap.delete('Alice')\nmap.keys()\nmap.values()\nmap.size // 2\n\n// Useful for storing unique items.\nvar set = new Set()\nset.add(1)\nset.add(5)\nset.has(1)\nset.has(4)  // => false\nset.delete(5)\n\n// Promises, see\n// http://www.slideshare.net/domenicdenicola/callbacks-promises-and-coroutines-oh-my-the-evolution-of-asynchronicity-in-javascript\n// https://github.com/petkaantonov/bluebird/#what-are-promises-and-why-should-i-use-them\nPromise.resolve(5).then(function(value) {\n  if ( ... ) throw new Error(\"whoops!\");\n  // do some stuff\n  return anotherPromise();\n}).catch(function(e) {\n  // any errors thrown asynchronously end up here\n});\n```\n\nNote that the ES6 `Promise` specification includes very few methods.\nFor a more useful set of utility methods\n(`map`/`reduce`/`bind`/`guard`/etc), you might want to look into the\n[`prfun`](https://github.com/cscott/prfun) package.\n\nOther stuff:\n\n* [ECMAScript 6 drafts](http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts)\n* [Harmony proposals](http://wiki.ecmascript.org/doku.php?id=harmony:harmony)\n\n## License\nThe project was initially based on [es6-shim by Axel Rauschmayer](https://github.com/rauschma/es6-shim).\n\nCurrent maintainers are: [Paul Miller](http://paulmillr.com), [Jordan Harband](https://github.com/ljharb) and [C. Scott Ananian](http://cscott.net).\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2014 Paul Miller (http://paulmillr.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n[1]: https://travis-ci.org/paulmillr/es6-shim.png\n[2]: https://travis-ci.org/paulmillr/es6-shim\n[3]: https://david-dm.org/paulmillr/es6-shim.png\n[4]: https://david-dm.org/paulmillr/es6-shim\n[5]: https://david-dm.org/paulmillr/es6-shim/dev-status.png\n[6]: https://david-dm.org/paulmillr/es6-shim#info=devDependencies\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/paulmillr/es6-shim/issues"
  },
  "_id": "es6-shim@0.10.1",
  "_from": "es6-shim@latest"
}
